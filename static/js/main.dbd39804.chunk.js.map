{"version":3,"sources":["logo.svg","components/UI/qoute_box.js","store/quotes_slice.js","components/new_quote.js","App.js","reportWebVitals.js","store/index.js","index.js","components/new_quotes.module.css"],"names":["QouteBox","props","id","children","listOfQuotes","text","author","initialState","value","Math","floor","random","length","quotesSlice","createSlice","name","reducers","nextQuote","state","actions","NewQuote","dispatch","useDispatch","class","classes","button","onClick","App","quote","useSelector","quotes","className","href","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","configureStore","reducer","quotesReducer","ReactDOM","render","document","getElementById","module","exports"],"mappings":"sMAAe,I,YCQAA,EARE,SAACC,GACd,OACI,qBAAKC,GAAG,YAAR,SACKD,EAAME,Y,cCDbC,EAAe,CACnB,CACEC,KAAM,+DACNC,OAAQ,iBAEV,CACED,KAAM,6FACNC,OAAQ,kBAEV,CACED,KAAM,6DACNC,OAAQ,eAEV,CACED,KAAM,6EACNC,OAAQ,qBAEV,CACED,KAAM,yEACNC,OAAQ,qBAEV,CACED,KAAM,4GACNC,OAAQ,oBAEV,CACED,KAAM,0FACNC,OAAQ,wBAEV,CACED,KAAM,2GACNC,OAAQ,kBAGNC,EAAe,CACnBC,MAAOJ,EAAaK,KAAKC,MAAMD,KAAKE,SAAWP,EAAaQ,UAExDC,EAAcC,YAAY,CAC9BC,KAAM,SACNR,eACAS,SAAU,CACRC,UAAW,SAACC,GACVA,EAAMV,MACJJ,EAAaK,KAAKC,MAAMD,KAAKE,SAAWP,EAAaQ,aAK9CK,EAAcJ,EAAYM,QAA1BF,UACAJ,IAAf,Q,gBCxCeO,EARE,WACf,IAAMC,EAAWC,cAEf,OACI,wBAAQC,MAAOC,IAAQC,OAAQvB,GAAG,YAAYwB,QAAS,kBAAKL,EAASJ,MAArE,wBCgBOU,MAjBf,WACE,IAAMC,EAAQC,aAAY,SAACX,GAAD,OAAWA,EAAMY,OAAOtB,MAAMH,QAClDC,EAASuB,aAAY,SAACX,GAAD,OAAWA,EAAMY,OAAOtB,MAAMF,UACzD,OACE,qBAAKyB,UAAU,MAAf,SACE,eAAC,EAAD,WACE,mBAAG7B,GAAG,OAAN,SAAc0B,IADhB,IAC2B,uBACzB,sBAAM1B,GAAG,SAAT,SAAmBI,IAFrB,IAEoC,uBAClC,mBAAGJ,GAAG,cAAc8B,KAAK,2BAA2BC,OAAO,SAA3D,SACE,mDAEF,cAAC,EAAD,UCLOC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCACQ,EAJDC,YAAe,CAC3BC,QAAS,CAAEf,OAAQgB,KCGrBC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,EAAD,MAGFM,SAASC,eAAe,SAM1BhB,K,kBCjBAiB,EAAOC,QAAU,CAAC,OAAS,8B","file":"static/js/main.dbd39804.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","const QouteBox = (props) => {\n    return (\n        <div id=\"quote-box\">\n            {props.children}\n        </div>\n    )\n}\n\nexport default QouteBox","import { createSlice } from \"@reduxjs/toolkit\";\n\nconst listOfQuotes = [\n  {\n    text: \"there's a crack in everything, that's how the light get's in\",\n    author: \"Leonard Cohen\",\n  },\n  {\n    text: \"The greatest glory in living lies not in never falling, but in rising every time we fall. \",\n    author: \"Nelson Mandela\",\n  },\n  {\n    text: \"The way to get started is to quit talking and begin doing.\",\n    author: \"Walt Disney\",\n  },\n  {\n    text: \"If life were predictable it would cease to be life, and be without flavor.\",\n    author: \"Eleanor Roosevelt\",\n  },\n  {\n    text: \"Tell me and I forget. Teach me and I remember. Involve me and I learn.\",\n    author: \"Benjamin Franklin\",\n  },\n  {\n    text: \"Many of life's failures are people who did not realize how close they were to success when they gave up. \",\n    author: \"Thomas A. Edison\",\n  },\n  {\n    text: \"Success is not final; failure is not fatal: It is the courage to continue that counts. \",\n    author: \"Winston S. Churchill\",\n  },\n  {\n    text: \"If you set your goals ridiculously high and it's a failure, you will fail above everyone else's success.\",\n    author: \"James Cameron\",\n  },\n];\nconst initialState = {\n  value: listOfQuotes[Math.floor(Math.random() * listOfQuotes.length)],\n};\nconst quotesSlice = createSlice({\n  name: \"quotes\",\n  initialState,\n  reducers: {\n    nextQuote: (state) => {\n      state.value =\n        listOfQuotes[Math.floor(Math.random() * listOfQuotes.length)];\n    },\n  },\n});\n\nexport const { nextQuote } = quotesSlice.actions;\nexport default quotesSlice.reducer;\n","import { useDispatch} from 'react-redux'\nimport {nextQuote} from '../store/quotes_slice'\nimport classes from './new_quotes.module.css'\nconst NewQuote = () => {\n  const dispatch = useDispatch()\n\n    return (\n        <button class={classes.button} id=\"new-quote\" onClick={()=> dispatch(nextQuote())}>new quote</button>\n    )\n}\n\nexport default NewQuote;","import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport QouteBox from \"./components/UI/qoute_box\";\nimport NewQuote from \"./components/new_quote\";\nimport { useSelector } from \"react-redux\";\n\nfunction App() {\n  const quote = useSelector((state) => state.quotes.value.text);\n  const author = useSelector((state) => state.quotes.value.author);\n  return (\n    <div className=\"App\">\n      <QouteBox>\n        <p id=\"text\">{quote}</p> <br />\n        <span id=\"author\">{author}</span> <br />\n        <a id=\"tweet-quote\" href=\"twitter.com/intent/tweet\" target=\"_blank\">\n          <button>tweet quote</button>\n        </a>\n        <NewQuote />\n      </QouteBox>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { configureStore, createSlice } from \"@reduxjs/toolkit\";\nimport quotesReducer from \"./quotes_slice\";\n\nconst store = configureStore({\n  reducer: { quotes: quotesReducer },\n});\n\nexport default store","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { Provider } from \"react-redux\";\nimport store from './store/index'\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"new_quotes_button__2kuRc\"};"],"sourceRoot":""}